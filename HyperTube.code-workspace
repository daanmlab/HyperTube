{
  "folders": [
    {
      "name": "üé¨ HyperTube (Root)",
      "path": "."
    },
    {
      "name": "üîß Backend (NestJS)",
      "path": "./backend"
    },
    {
      "name": "‚öõÔ∏è Frontend (React)",
      "path": "./frontend"
    },
    {
      "name": "üîÑ Worker",
      "path": "./worker"
    },
    {
      "name": "üåê Nginx",
      "path": "./nginx"
    }
  ],
  "settings": {
    // General Editor Settings
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "explicit"
    },
    "editor.rulers": [80, 120],
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.minimap.enabled": true,
    "editor.minimap.maxColumn": 120,
    // File Explorer
    "explorer.compactFolders": false,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
      "*.ts": "${capture}.js",
      "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
      "*.jsx": "${capture}.js",
      "*.tsx": "${capture}.ts",
      "tsconfig.json": "tsconfig.*.json",
      "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml",
      "docker-compose.yml": "docker-compose.*.yml, Dockerfile*",
      "*.env": ".env.*"
    },
    // TypeScript
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.suggest.autoImports": true,
    "typescript.preferences.quoteStyle": "single",
    // Biome (disable if present)
    "biome.enable": false,
    "biome.format.enable": false,
    "biome.lint.enable": false,
    // Set Prettier as the default formatter
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    // ESLint
    "eslint.workingDirectories": ["backend", "frontend", "worker"],
    "eslint.validate": [
      "javascript",
      "javascriptreact",
      "typescript",
      "typescriptreact"
    ],
    // Prettier
    "prettier.requireConfig": true,
    "prettier.singleQuote": true,
    "prettier.trailingComma": "es5",
    "prettier.semi": true,
    "prettier.printWidth": 80,
    // Files
    "files.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/build": true,
      "**/.next": true,
      "**/coverage": true,
      "**/.nyc_output": true,
      "**/.git": false
    },
    "files.watcherExclude": {
      "**/node_modules/**": true,
      "**/dist/**": true,
      "**/build/**": true
    },
    // Search
    "search.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/build": true,
      "**/*.log": true
    },
    // Terminal
    "terminal.integrated.cwd": "${workspaceFolder}",
    "terminal.integrated.defaultProfile.osx": "zsh",
    // Git
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    // Docker
    "docker.languageserver.formatter.ignoreMultilineInstructions": true,
    // Emmet
    "emmet.includeLanguages": {
      "typescript": "typescriptreact",
      "javascript": "javascriptreact"
    },
    // File Associations
    "files.associations": {
      "*.env.*": "properties",
      "docker-compose*.yml": "dockercompose",
      "Dockerfile*": "dockerfile"
    },
    // JSON
    "json.schemas": [
      {
        "fileMatch": ["package.json"],
        "url": "https://json.schemastore.org/package.json"
      },
      {
        "fileMatch": ["tsconfig*.json"],
        "url": "https://json.schemastore.org/tsconfig.json"
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "üîß Debug Backend (NestJS)",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/src/main.ts",
        "cwd": "${workspaceFolder}/backend",
        "runtimeArgs": ["-r", "ts-node/register"],
        "env": {
          "NODE_ENV": "development"
        },
        "console": "integratedTerminal",
        "restart": true,
        "envFile": "${workspaceFolder}/.env"
      },
      {
        "name": "üîÑ Debug Worker",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/worker/src/main.ts",
        "cwd": "${workspaceFolder}/worker",
        "runtimeArgs": ["-r", "ts-node/register"],
        "env": {
          "NODE_ENV": "development"
        },
        "console": "integratedTerminal",
        "restart": true,
        "envFile": "${workspaceFolder}/.env"
      },
      {
        "name": "üê≥ Attach to Backend Container",
        "type": "node",
        "request": "attach",
        "port": 9229,
        "address": "localhost",
        "localRoot": "${workspaceFolder}/backend",
        "remoteRoot": "/app"
      }
    ],
    "compounds": [
      {
        "name": "üöÄ Debug Full Stack",
        "configurations": ["üîß Debug Backend (NestJS)", "üîÑ Debug Worker"],
        "stopAll": true
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "üê≥ Docker: Start All Services",
        "type": "shell",
        "command": "docker-compose up -d",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üê≥ Docker: Stop All Services",
        "type": "shell",
        "command": "docker-compose down",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üê≥ Docker: Rebuild All",
        "type": "shell",
        "command": "docker-compose down && docker-compose build --no-cache && docker-compose up -d",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üîß Backend: Install Dependencies",
        "type": "shell",
        "command": "npm install",
        "options": {
          "cwd": "${workspaceFolder}/backend"
        },
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "‚öõÔ∏è Frontend: Install Dependencies",
        "type": "shell",
        "command": "npm install",
        "options": {
          "cwd": "${workspaceFolder}/frontend"
        },
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üîÑ Worker: Install Dependencies",
        "type": "shell",
        "command": "npm install",
        "options": {
          "cwd": "${workspaceFolder}/worker"
        },
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üì¶ Install All Dependencies",
        "dependsOrder": "parallel",
        "dependsOn": [
          "üîß Backend: Install Dependencies",
          "‚öõÔ∏è Frontend: Install Dependencies",
          "üîÑ Worker: Install Dependencies"
        ],
        "group": "build"
      },
      {
        "label": "üîß Backend: Start Dev",
        "type": "shell",
        "command": "npm run start:dev",
        "options": {
          "cwd": "${workspaceFolder}/backend"
        },
        "group": "build",
        "isBackground": true,
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": {
          "pattern": {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          },
          "background": {
            "activeOnStart": true,
            "beginsPattern": ".",
            "endsPattern": "."
          }
        }
      },
      {
        "label": "‚öõÔ∏è Frontend: Start Dev",
        "type": "shell",
        "command": "npm run dev",
        "options": {
          "cwd": "${workspaceFolder}/frontend"
        },
        "group": "build",
        "isBackground": true,
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": {
          "pattern": {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          },
          "background": {
            "activeOnStart": true,
            "beginsPattern": ".",
            "endsPattern": "."
          }
        }
      }
    ]
  },
  "extensions": {
    "recommendations": [
      // TypeScript & JavaScript
      "ms-vscode.vscode-typescript-next",
      "bradlc.vscode-tailwindcss",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",
      // React & Frontend
      "ms-vscode.vscode-react-refactor",
      "formulahendry.auto-rename-tag",
      "christian-kohler.path-intellisense",
      "ms-vscode.vscode-json",
      // Docker & DevOps
      "ms-azuretools.vscode-docker",
      "ms-vscode-remote.remote-containers",
      // Database
      "ms-mssql.mssql",
      "ckolkman.vscode-postgres",
      // Git & Version Control
      "eamodio.gitlens",
      "github.vscode-pull-request-github",
      // Utilities
      "ms-vscode.vscode-thunder-client",
      "ms-vscode.vscode-todo-highlight",
      "streetsidesoftware.code-spell-checker",
      "usernamehw.errorlens",
      "gruntfuggly.todo-tree",
      // Themes & UI
      "pkief.material-icon-theme",
      "github.github-vscode-theme",
      // Testing
      "ms-vscode.test-adapter-converter",
      "hbenl.vscode-test-explorer"
    ]
  }
}
